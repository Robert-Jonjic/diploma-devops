name: Run the unit tests & publish Docker image

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  # ───────────────────────────────────────── tests ──────────────────────────
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-dependencies
      - name: Run pytest
        run: pytest

  # ─────────────────────────────── database migrations ──────────────────────
  runmigrations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-dependencies
      - name: Run django migrate
        run: python manage.py migrate

  migrations-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-dependencies
      - name: Run makemigrations --check
        run: python manage.py makemigrations --check

  # ────────────────────────────── semantic-release ──────────────────────────
  semantic_release:
    runs-on: ubuntu-latest
    needs:
      - test
      - runmigrations
      - migrations-check
    if: github.ref == 'refs/heads/main'
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch full history & tags

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Run semantic-release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ───────────────────────────── docker build & push ────────────────────────
  build-docker-image:
    runs-on: ubuntu-latest
    needs: [semantic_release]
    if: github.ref == 'refs/heads/main' && needs.semantic_release.outputs.new_release_published == 'true'

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: devops-diploma-2025

    steps:
      - uses: actions/checkout@v4

      # ── derive lower-case owner and expose as output ─────────────
      - name: Derive image owner
        id: prep
        run: echo "image_owner=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      # ── login ────────────────────────────────────────────────────
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ steps.prep.outputs.image_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ── OCI labels & semver tag ──────────────────────────────────
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.prep.outputs.image_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.semantic_release.outputs.new_release_version }}

      # ── build & push ─────────────────────────────────────────────
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
