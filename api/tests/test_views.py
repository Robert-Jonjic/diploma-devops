from datetime import date

from django.urls import reverse
from rest_framework import status
from rest_framework.test import APITestCase

from api.models import Book


class BookViewTest(APITestCase):
    def test_response_is_correct(self):
        # Arrange – create one book in the test database
        book = Book.objects.create(
            title="Demo",
            description="Description",
            author="Author",
            isbn="9781234567897",
            published_date=date.today(),
        )

        # Act – hit the list endpoint generated by DefaultRouter
        url = reverse("api:book-list")          # was 'api:books'
        response = self.client.get(url, format="json")

        # Assert – HTTP 200 and the book we just created is returned
        self.assertEqual(response.status_code, status.HTTP_200_OK)

        payload = response.json()

        # Handle both paginated and un-paginated responses
        results = payload["results"] if isinstance(payload, dict) and "results" in payload else payload

        self.assertEqual(len(results), 1)
        returned = results[0]
        self.assertEqual(returned["title"], book.title)
        self.assertEqual(returned["description"], book.description)
        self.assertEqual(returned["author"], book.author)


class HealthViewTest(APITestCase):
    def test_response_is_correct(self):
        url = reverse("api:health-list")        # router name for /api/
        response = self.client.get(url, format="json")

        self.assertEqual(response.status_code, status.HTTP_200_OK)
        self.assertEqual(response.json()["status"], "ok")
